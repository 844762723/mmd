<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mmt.dao.UserDao">
    <insert id="addUserInfo" parameterType="user">
        INSERT INTO user(username, user_no, password, cellphone, age, sex, birthday,
        telephone, weixin, qq, role_id, dep_id, post_id, crtdate, crtuser, agency_ids,
        upddate, upduser, headicon, recsts)
        VALUES (#{username}, #{user_no}, #{password}, #{cellphone}, #{age}, #{sex}, #{birthday},
        #{telephone}, #{weixin}, #{qq}, #{role_id}, #{dep_id}, #{post_id}, now(), #{crtuser}, #{agency_ids},
        now(), #{upduser}, #{headicon}, '1')
    </insert>

    <insert id="addRole" useGeneratedKeys="true" keyProperty="rid" keyColumn="rid">
        insert into role(rname, rdesc, crtdate, crtuser, upddate, upduser, recsts)
        VALUE (#{rname}, #{rdesc}, now(), #{crtuser}, now(), #{crtuser}, '1')
    </insert>

    <insert id="addEvent" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="params.eid" keyColumn="eid">
        insert into myevent(uid, title, start, end, allDay, className)
        VALUES (#{params.uid}, #{params.title}, #{params.start}, #{params.end}, #{params.addDay}, #{params.code})
    </insert>

    <insert id="addUserMessage">
        insert into umessage(message, uid, crtdate) VALUES
        <foreach collection="uids" item="uid" separator=",">
            (#{message}, #{uid}, now())
        </foreach>
    </insert>

    <delete id="delUserInfo">
      DELETE FROM user where uid in
      <foreach collection="ids" item="id" open="(" close=")" separator=",">
          #{id}
      </foreach>
    </delete>

    <delete id="delEvent">
        DELETE FROM myevent where eid = #{eid}
    </delete>

    <select id="findUserWithNameAndPass" resultType="user" parameterType="user">
        select u.uid, u.username, u.user_no, u.password, u.telephone, u.cellphone,
        u.age,u.weixin,u.qq,u.birthday,u.dep_id,u.sex,
        u.role_id, u.headicon, u.agency_ids, u.post_id
        from user u  where u.user_no = #{user_no} and u.password = #{password}
    </select>

    <select id="getRoleWithIds" resultType="role">
        select r.rid, r.rname from role r where r.rid in <foreach collection="role_ids" item="role_id" open="(" close=")" separator=",">
          #{role_id}
        </foreach>
    </select>

    <select id="getAllUser" resultType="user">
        select u.uid, u.username, u.user_no, u.password, u.telephone, u.cellphone, u.role_id, u.headicon,
        u.weixin, u.qq, u.birthday, u.age, u.sex, u.post_id, (select data_name from bs_basedict where dict_code = 'ZW001' and data_code = post_id) post,
        u.dep_id, u.agency_ids, (select GROUP_CONCAT(aname SEPARATOR ',') from agency a where concat(',', u.agency_ids, ',') like concat('%,', aid, ',%')) agencys from user u
        <where>
            <if test="user_no !=null and user_no!=''">
               and user_no like CONCAT('%', #{user_no}, '%')
            </if>
            <if test="username !=null and username != ''">
                and username like CONCAT('%', #{username}, '%')
            </if>
            <if test="dep_id != null and dep_id != ''">
                and dep_id = #{dep_id}
            </if>
        </where>
    </select>

    <select id="getUserWithNoOrName" resultType="user">
      SELECT user_no, username from user where (user_no = #{user_no} or username = #{username})
      <if test="uid != null and uid != ''">
          and uid != #{uid}
      </if>
    </select>
    <!--查询菜单信息-->
    <select id="getMenu" resultType="role" resultMap="menuMap">
        select r.rid, r.rname, m.mid, m.mname, m.murl, m.mdesc,
        m2.mname pmname, m2.micon pmicon, m2.mdesc pmdesc, m2.mid pmid, m2.murl pmurl
        from role r left join menu m on CONCAT(',', r.m_ids, ',') LIKE CONCAT('%,', m.mid, ',%')
        left join menu m2 on m.parentid = m2.mid
        where r.rid in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">#{id}</foreach>
    </select>

    <select id="getMenuWithRuleIds" resultType="Menu">
      select mid, mname from menu where mid in <foreach collection="role_ids" item="role_id" open="(" close=")" separator=",">#{role_id}</foreach>
    </select>

    <select id="getMenuByRId" resultType="Menu">
        select mid, mname from menu where
        concat(',', (select group_concat(m_ids) from role where rid in
        <foreach collection="role_ids" item="id" open="(" close=")" separator=",">#{id}</foreach>
        ), ',') like concat('%,', MID, ',%')
    </select>
    <select id="queryRoleName" resultType="int">
        SELECT COUNT(*) FROM role where rname = #{rname}
    </select>
    <select id="getRoleByUser" resultType="User">
        select role_id  from user where uid = #{uid}
    </select>
    <select id="getCountWithUserName" resultType="int" parameterType="user">
        SELECT count(*) from user where uid != #{uid} and username = #{username}
    </select>

    <select id="getMyEvent" resultType="map">
        SELECT * from myevent where end >= now() and uid = #{uid}
    </select>

    <select id="getUserDetail" resultType="user">
        select uid, user_no, username, cellphone, age, sex, birthday, telephone, weixin, qq, dep_id,
        (select dep_name from department d where d.dep_id = u.dep_id) dep_name, agency_ids, post_id from user u where uid = #{id}
    </select>
    <select id="getCountWithLoginNo" resultType="int" parameterType="user">
        SELECT count(*) from user
        <where>
            user_no = #{user_no}
            <if test="uid != null and uid != ''">
               and uid != #{uid}
            </if>
        </where>
    </select>

    <select id="getUserByMenuId" resultType="map">
        select group_concat(uid) uids from user  where role_id in (select rid from role where concat(',', m_ids, ',') like concat('%,', #{menuId}, ',%'))
    </select>

    <resultMap id="menuMap" type="Role">
        <id column="rid" property="rid"></id>
        <result column="rname" property="rname"></result>
        <collection property="menuList" ofType="Menu">
            <id column="pmid" property="mid"></id>
            <result column="pmname" property="mname"></result>
            <result column="pmicon" property="micon"></result>
            <result column="pmdesc" property="mdesc"></result>
            <result column="pmurl" property="murl"></result>
            <collection property="childMenu" ofType="Menu">
                <id column="mid" property="mid"></id>
                <result column="mname" property="mname"></result>
                <result column="micon" property="micon"></result>
                <result column="mdesc" property="mdesc"></result>
                <result column="murl" property="murl"></result>
            </collection>
        </collection>
    </resultMap>

    <update id="updPass">
        update user u set u.password = #{newpass} where u.uid = #{uid}
    </update>

    <update id="updateUserHeadIcon">
        update user set headicon = #{headicon} where uid = #{uid}
    </update>

    <update id="updUserInfo" parameterType="user">
        update user set username = #{username}, user_no = #{user_no}, sex = #{sex}, age = #{age},
         birthday = #{birthday}, qq = #{qq}, weixin = #{weixin}, cellphone = #{cellphone}, telephone = #{telephone},
          dep_id = #{dep_id}, upddate = now(), upduser = #{upduser}, post_id = #{post_id}, agency_ids = #{agency_ids} where uid = #{uid}
    </update>

    <update id="updRoleName">
        update role set rname = #{params.newrname} where rname = #{params.rname}
    </update>

    <update id="saveUserRole" parameterType="user">
        update user set role_id = #{role_id}, upduser = #{upduser}, upddate = now() where uid = #{uid}
    </update>

    <update id="updUserIcon" parameterType="user">
        update user set headicon = #{headicon} where uid = #{uid}
    </update>
    <update id="updUserName" parameterType="user">
        update user set username = #{username} where uid = #{uid}
    </update>
    <update id="updUserAge" parameterType="user">
        update user set age = #{age} where uid = #{uid}
    </update>
    <update id="updUserBirthday" parameterType="user">
        update user set birthday = #{birthday} where uid = #{uid}
    </update>
    <update id="updUserTelephone" parameterType="user">
        update user set telephone = #{telephone} where uid = #{uid}
    </update>
    <update id="updUserCellphone" parameterType="user">
        update user set cellphone = #{cellphone} where uid = #{uid}
    </update>
    <update id="updUserWeixin" parameterType="user">
        update user set weixin = #{weixin} where uid = #{uid}
    </update>
    <update id="updUserQq" parameterType="user">
        update user set qq = #{qq} where uid = #{qq}
    </update>
    <update id="editEvent">
        update myevent set title = #{params.title}
         <if test="params.start != null and params.start != ''">
             , start = #{params.start}
         </if>
        <if test="params.end != null and params.end != ''">
            , end = #{params.end}
        </if>
        <if test="params.allDay != null and params.allDay != ''">
            , allDay = #{params.allDay}
        </if>
        <if test="params.code != null and params.code != ''">
            , className = #{params.code}
        </if>
         where eid = #{params.eid}
    </update>

</mapper>